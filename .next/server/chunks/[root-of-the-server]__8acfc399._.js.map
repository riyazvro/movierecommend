{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/riyaz/Downloads/Web%20Development/Movie%20Ticket%20Booking/my-app/app/lib/mongodb.js"],"sourcesContent":["// lib/mongodb.js\r\n\r\nimport { MongoClient } from 'mongodb'\r\n\r\nif (!process.env.MONGODB_URI) {\r\n    throw new Error('Invalid/Missing environment variable: \"MONGODB_URI\"')\r\n}\r\n\r\nconst uri = process.env.MONGODB_URI\r\nconst options = {}\r\n\r\nlet client\r\nlet clientPromise\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    if (!global._mongoClientPromise) {\r\n        client = new MongoClient(uri, options)\r\n        global._mongoClientPromise = client.connect()\r\n    }\r\n    clientPromise = global._mongoClientPromise\r\n} else {\r\n    client = new MongoClient(uri, options)\r\n    clientPromise = client.connect()\r\n}\r\n\r\nexport default clientPromise"],"names":[],"mappings":"AAAA,iBAAiB;;;;AAEjB;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC1B,MAAM,IAAI,MAAM;AACpB;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,wCAA4C;IACxC,IAAI,CAAC,4CAAO,mBAAmB,EAAE;QAC7B,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,4CAAO,mBAAmB,GAAG,OAAO,OAAO;IAC/C;IACA,gBAAgB,4CAAO,mBAAmB;AAC9C;;uCAKe","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/riyaz/Downloads/Web%20Development/Movie%20Ticket%20Booking/my-app/app/api/favorite/route.js"],"sourcesContent":["import clientPromise from \"@/app/lib/mongodb\"\r\nconst client = await clientPromise\r\nconst db = client.db(\"MovieRecommend\")\r\nconst collection = db.collection(\"favorites\")\r\nexport async function POST(request) {\r\n    const body = await request.json()\r\n    const isAlreadyFav=await collection.findOne({movieid:body.movieid})\r\n    console.log(isAlreadyFav);\r\n    if (!isAlreadyFav) {\r\n        const result = await collection.insertOne(body)\r\n        \r\n        if (result) {\r\n    \r\n            return Response.json({ message: 'Added to Favorites', success: true,  result: result })\r\n        }\r\n    }\r\n    return Response.json({ message: \"error\" })\r\n\r\n}\r\nexport async function DELETE(request) {\r\n    const body = await request.json()\r\n    const id=body.movieid\r\n    const result=await collection.deleteOne({movieid:id})\r\n    if (result) {\r\n        \r\n        return Response.json({message:\"Removed from Favorites\",result:result,success:true})\r\n    }\r\n    return Response.json({message:\"Error deleting\"})\r\n}\r\nexport async function GET() {\r\n    const result=await collection.find({}).toArray()\r\n    return Response.json({result:result})\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;AAAA;;AACA,MAAM,SAAS,MAAM,uHAAA,CAAA,UAAa;AAClC,MAAM,KAAK,OAAO,EAAE,CAAC;AACrB,MAAM,aAAa,GAAG,UAAU,CAAC;AAC1B,eAAe,KAAK,OAAO;IAC9B,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,eAAa,MAAM,WAAW,OAAO,CAAC;QAAC,SAAQ,KAAK,OAAO;IAAA;IACjE,QAAQ,GAAG,CAAC;IACZ,IAAI,CAAC,cAAc;QACf,MAAM,SAAS,MAAM,WAAW,SAAS,CAAC;QAE1C,IAAI,QAAQ;YAER,OAAO,SAAS,IAAI,CAAC;gBAAE,SAAS;gBAAsB,SAAS;gBAAO,QAAQ;YAAO;QACzF;IACJ;IACA,OAAO,SAAS,IAAI,CAAC;QAAE,SAAS;IAAQ;AAE5C;AACO,eAAe,OAAO,OAAO;IAChC,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,KAAG,KAAK,OAAO;IACrB,MAAM,SAAO,MAAM,WAAW,SAAS,CAAC;QAAC,SAAQ;IAAE;IACnD,IAAI,QAAQ;QAER,OAAO,SAAS,IAAI,CAAC;YAAC,SAAQ;YAAyB,QAAO;YAAO,SAAQ;QAAI;IACrF;IACA,OAAO,SAAS,IAAI,CAAC;QAAC,SAAQ;IAAgB;AAClD;AACO,eAAe;IAClB,MAAM,SAAO,MAAM,WAAW,IAAI,CAAC,CAAC,GAAG,OAAO;IAC9C,OAAO,SAAS,IAAI,CAAC;QAAC,QAAO;IAAM;AACvC","debugId":null}}]
}