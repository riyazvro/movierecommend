{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/riyaz/Downloads/Web%20Development/Movie%20Ticket%20Booking/my-app/app/lib/mongodb.js"],"sourcesContent":["// lib/mongodb.js\r\n\r\nimport { MongoClient } from 'mongodb'\r\n\r\nif (!process.env.MONGODB_URI) {\r\n    throw new Error('Invalid/Missing environment variable: \"MONGODB_URI\"')\r\n}\r\n\r\nconst uri = process.env.MONGODB_URI\r\nconst options = {}\r\n\r\nlet client\r\nlet clientPromise\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    if (!global._mongoClientPromise) {\r\n        client = new MongoClient(uri, options)\r\n        global._mongoClientPromise = client.connect()\r\n    }\r\n    clientPromise = global._mongoClientPromise\r\n} else {\r\n    client = new MongoClient(uri, options)\r\n    clientPromise = client.connect()\r\n}\r\n\r\nexport default clientPromise"],"names":[],"mappings":"AAAA,iBAAiB;;;;AAEjB;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC1B,MAAM,IAAI,MAAM;AACpB;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,wCAA4C;IACxC,IAAI,CAAC,4CAAO,mBAAmB,EAAE;QAC7B,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,4CAAO,mBAAmB,GAAG,OAAO,OAAO;IAC/C;IACA,gBAAgB,4CAAO,mBAAmB;AAC9C;;uCAKe","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/riyaz/Downloads/Web%20Development/Movie%20Ticket%20Booking/my-app/app/api/iswatchlater/route.js"],"sourcesContent":["import clientPromise from \"@/app/lib/mongodb\"\r\nconst client = await clientPromise\r\nconst db = client.db(\"MovieRecommend\")\r\nconst collection = db.collection(\"watchlater\")\r\nexport async function POST(request) {\r\n\r\n    const body = await request.json();\r\n    const movieid = body.movieid;\r\n\r\n    if (!movieid) {\r\n        return Response.json({ success: false, message: \"Movie ID is required\" });\r\n    }\r\n\r\n    const result = await collection.findOne({ movieid: Number(movieid) });\r\n\r\n    if (result) {\r\n        return Response.json({ success: true });\r\n        \r\n    }\r\n    return Response.json({ success: false });\r\n    \r\n\r\n\r\n\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,SAAS,MAAM,uHAAA,CAAA,UAAa;AAClC,MAAM,KAAK,OAAO,EAAE,CAAC;AACrB,MAAM,aAAa,GAAG,UAAU,CAAC;AAC1B,eAAe,KAAK,OAAO;IAE9B,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,MAAM,UAAU,KAAK,OAAO;IAE5B,IAAI,CAAC,SAAS;QACV,OAAO,SAAS,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAuB;IAC3E;IAEA,MAAM,SAAS,MAAM,WAAW,OAAO,CAAC;QAAE,SAAS,OAAO;IAAS;IAEnE,IAAI,QAAQ;QACR,OAAO,SAAS,IAAI,CAAC;YAAE,SAAS;QAAK;IAEzC;IACA,OAAO,SAAS,IAAI,CAAC;QAAE,SAAS;IAAM;AAK1C","debugId":null}}]
}